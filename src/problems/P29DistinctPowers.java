/*Consider all integer combinations of ab for 2 ≤ a ≤ 5 and 2 ≤ b ≤ 5

    2^2=4, 2^3=8, 2^4=16, 2^5=32
    3^2=9, 3^3=27, 3^4=81, 3^5=243
    4^2=16, 4^3=64, 4^4=256, 4^5=1024
    5^2=25, 5^3=125, 5^4=625, 5^5=3125

If they are then placed in numerical order, with any repeats removed, 
we get the following sequence of 15 distinct terms:

4, 8, 9, 16, 25, 27, 32, 64, 81, 125, 243, 256, 625, 1024, 3125

How many distinct terms are in the sequence generated by ab for 2 ≤ a ≤ 100 and 2 ≤ b ≤ 100?
*/

package problems;

public class P29DistinctPowers {
	public static void main(String[] args) {
		int a=16, k=0, m=5, dubCount=0;
		int [] A=new int[a];
		
		for(int i=2; i<=m; i++){
			for(int j=2; j<=m; j++){
				A[k]= (int) Math.pow(i, j);
				System.out.print(A[k]+", ");
				
				k++;
			}
		}
		System.out.println("\n");
		
		for(k=0; k<a; k++){
			for(int h=k+1; h<a; h++){
				if(A[k]<A[h])
					A[k]=A[k];
				else if(A[k]>A[h]){
					int temp=A[k];
					A[k]=A[h];
					A[h]=temp;
				}
				else if(A[k]==A[h]){
					A[k]=A[k]*(-1);
					dubCount++;
				}
					
			}
		}
		
		int [] newArr=new int [a-dubCount];
		int j=0;
		for(int i=0; i<(a-dubCount); i++){
			if(A[i+j]<0){
				j++;
				i--;
				continue;
			}
			newArr[i]=A[i+j];
		}
		
		for(int i=0; i<(a-dubCount); i++){
			System.out.print(newArr[i]+", ");
		}
	}
}
